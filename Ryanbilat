#include <stdio.h>

#include <stdlib.h>

#include <time.h>

#include <stdbool.h>

void generate_random_password(int length);

int main() {

    int length;

    bool include_uppercase = false;

    bool include_lowercase = false;

    bool include_numbers = false;

    bool include_special_chars = false;

    

  

    srand(time(NULL));

    

    printf("Enter the desired length of the password (8 - 20 characters): ");

    scanf("%d", &length);

    

    

    if (length < 8 || length > 20) {

        printf("Invalid password length. Please enter a length between 8 and 20.\n");

        return 0;

    }

    

    printf("Choose types of characters to include in the password:\n");

    printf("Include uppercase letters (A-Z)? [y/n]: ");

    if (getchar() == 'y') {

        include_uppercase = true;

    }

    getchar(); 

    

    printf("Include lowercase letters (a-z)? [y/n]: ");

    if (getchar() == 'y') {

        include_lowercase = true;

    }

    getchar();

    

    printf("Include numbers (0-9)? [y/n]: ");

    if (getchar() == 'y') {

        include_numbers = true;

    }

    getchar();

    

    printf("Include special characters (!@#$%%^&*()-_+={}[]<>?)? [y/n]: ");

    if (getchar() == 'y') {

        include_special_chars = true;

    }

    getchar();

    

 

    if (!(include_uppercase || include_lowercase || include_numbers || include_special_chars)) {

        printf("At least one type of character must be selected.\n");

        return 0;

    }

    

    generate_random_password(length);

    

    return 0;

}

void generate_random_password(int length) {

    const char uppercase[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

    const char lowercase[] = "abcdefghijklmnopqrstuvwxyz";

    const char numbers[] = "0123456789";

    const char special_chars[] = "!@#$%%^&*()-_+={}[]<>?";

    

    char password[length + 1];

    int num_char_types = 0;

    int i;

    

    if (length < 8 || length > 20) {

        printf("Invalid password length. Please enter a length between 8 and 20.\n");

        return;

    }

    

    if (include_uppercase) {

        num_char_types++;

    }

    if (include_lowercase) {

        num_char_types++;

    }

    if (include_numbers) {

        num_char_types++;

    }

    if (include_special_chars) {

        num_char_types++;

    }

    

    if (num_char_types == 0) {

        printf("At least one type of character must be selected.\n");

        return;

    }

    

    

    for (i = 0; i < length; i++) {

        int char_type = rand() % num_char_types;

        

        if (include_uppercase && char_type == 0) {

            password[i] = uppercase[rand() % (sizeof(uppercase) - 1)];

        } else if (include_lowercase && char_type == 1) {

            password[i] = lowercase[rand() % (sizeof(lowercase) - 1)];

        } else if (include_numbers && char_type == 2) {

            password[i] = numbers[rand() % (sizeof(numbers) - 1)];

        } else if (include_special_chars && char_type == 3) {

            password[i] = special_chars[rand() % (sizeof(special_chars) - 1)];

        } else {

            // Randomly select from any available character type

            int available_char_types = num_char_types;

            if (include_uppercase) {

                available_char_types--;

            }

            if (include_lowercase) {

                available_char_types--;

            }

            if (include_numbers) {

                available_char_types--;

            }

            if (include_special_chars) {

                available_char_types--;

            }

            

            int selected_char_type = rand() % available_char_types;

            int offset = 0;

            

            if (include_uppercase && char_type > selected_char_type) {

                offset++;

            }

            if (include_lowercase && char_type > selected_char_type + offset) {

                offset++;

            }

            if (include_numbers && char_type > selected_char_type + offset) {

                offset++;

            }

            if (include_special_chars && char_type > selected_char_type + offset) {

                offset++;

            }

            

            if (include_uppercase) {

                password[i] = uppercase[rand() % (sizeof(uppercase) - 1)];

            } else if (include_lowercase) {

                password[i] = lowercase[rand() % (sizeof(lowercase) - 1)];

            } else if (include_numbers) {

                password[i] = numbers[rand() % (sizeof(numbers) - 1)];

            } else if (include_special_chars) {

                password[i] = special_chars[rand() % (sizeof(special_chars) - 1)];

            }

        }

    }

    

    password[length] = '\0';

    

    printf("Generated password: %s\n", password);

}
